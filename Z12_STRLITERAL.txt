# HANDLING A SHORT STRING
ADD r0 r0 r0  # Blank slot for first machine cycle.
ADDI r3 r3 8  # Setup stack pointer to leave first 8 bytes free.
ADDI r0 r0 9  # r0 contains first character.
ADD r0 r0 r0  # Shift left r0 (18).
ADD r0 r0 r0  # Shift left r0 (36).
ADD r0 r0 r0  # Shift left r0 (72) ASCII "H".
SW r0 r3 0    # "H" in 0x0008.
SUB r0 r0 r0  # Flush r0.
ADDI r0 r0 8  # r0 contains second character.
ADD r0 r0 r0  # Shift left r0 (16).
ADD r0 r0 r0  # Shift left r0 (32).
ADD r0 r0 r0  # Shift left r0 (64).
ADDI r0 r0 5  # Add 5 to r0 (69) ASCII "E".
SW r0 r3 1    # "E" in 0x0009.
SUB r0 r0 r0  # Flush r0.
ADDI r0 r0 9  # r0 contains third character.
ADD r0 r0 r0  # Shift left r0 (18).
ADD r0 r0 r0  # Shift left r0 (36).
ADD r0 r0 r0  # Shift left r0 (72).
ADDI r0 r0 4  # Add 4 to r0 (76) ASCII "L".
SW r0 r3 2    # "L" in 0x000A.
SW r0 r3 3    # "L" in 0x000B.
SUB r0 r0 r0  # Flush r0.
ADDI r0 r0 10 # r0 contains fifth character.
ADD r0 r0 r0  # Shift left r0 (20).
ADD r0 r0 r0  # Shift left r0 (40).
ADD r0 r0 r0  # Shift left r0 (80).
SUBI r0 r0 1  # Subtract 1 from r0 (79) ASCII "O".
SW r0 r3 4    # "O" in 0x000C.
SUB r0 r0 r0  # Flush r0.
ADDI r0 r0 15 # r0 contains last character.
ADD r0 r0 r0  # Shift left r0 (30).
ADDI r0 r0 3  # Add 3 to r0 (33) ASCII "!".
SW r0 r3 5    # "!" in 0x000D.
SUB r0 r0 r0  # Flush r0.
ADDI r0 r0 10 # "\n" in r0
SW r0 r3 6    # String terminated with newline.
LW r0 r3 0    # "H" in r0
SW r0 r1 0    # "H" to TTY
LW r0 r3 1    # "E" in r0
SW r0 r1 0    # "E" to TTY
LW r0 r3 2    # "L" in r0
SW r0 r1 0    # "L" to TTY
LW r0 r3 3    # "L" in r0
SW r0 r1 0    # "L" to TTY
LW r0 r3 4    # "O" in r0
SW r0 r1 0    # "O" to TTY
LW r0 r3 5    # "!" in r0
SW r0 r1 0    # "!" to TTY
LW r0 r3 6    # "\n" in r0
SW r0 r1 0    # "\n" to TTY
SUB r0 r0 r0  # Flush r0.
JUMP -15      # Jump back to start of string writing (print endlessly until interrupted).